<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.or.picsion.picture.dao.PictureDao">

	<!-- 마이 스튜디오 사진 , 좋아요, 북마크 리스트 -->
	<select id="studioPicList" resultType="kr.or.picsion.picture.dto.Picture">
	<!-- select p.*, if(ifNULL(r.userNo,0)=0,'F','T') as respectCheck, if(ifNULL(b.userNo,0)=0,'F','T') as bookmarkCheck, ifNULL(rc.respectcount,0) as respectCount, ifNULL(bc.bookmarkcount,0) as bookmarkCount
	from (select * from PICTURE where userNo=#{param1}) p 
		join USERS u on p.userNo=u.userNo 
		left join (select * from RESPECT where userNo=#{param2}) r on p.picNo=r.picNo 
		left join (select * from BOOKMARK where userNo=#{param2}) b on p.picNo=b.picNo 
		left join (SELECT picNo, COUNT(*) as respectCount FROM RESPECT GROUP BY picNo) rc on rc.picNo=p.picNo 
		left join (SELECT picNo, COUNT(*) as bookmarkCount FROM BOOKMARK GROUP BY picNo) bc on bc.picNo=p.picNo
	order by p.picReg DESC -->
	select *
	from (select *from (select @RNUM := @RNUM + 1 AS ROWNUM, A.*  from (select *from (select p.*, if(ifNULL(r.userNo,0)=0,'F','T') as respectCheck, if(ifNULL(b.userNo,0)=0,'F','T') as bookmarkCheck, ifNULL(rc.respectcount,0) as respectCount, ifNULL(bc.bookmarkcount,0) as bookmarkCount
	   	from (select * from PICTURE where userNo=#{param1}) p
	   	join USERS u on p.userNo=u.userNo
	   	left join (select * from RESPECT where userNo=#{param2}) r on p.picNo=r.picNo
	   	left join (select * from BOOKMARK where userNo=#{param2}) b on p.picNo=b.picNo
	   	left join (SELECT picNo, COUNT(*) as respectCount FROM RESPECT GROUP BY picNo) rc on rc.picNo=p.picNo
	   	left join (SELECT picNo, COUNT(*) as bookmarkCount FROM BOOKMARK GROUP BY picNo) bc on bc.picNo=p.picNo) pp order by pp.picNo DESC, pp.picReg DESC LIMIT 18446744073709551615 ) A, ( SELECT @RNUM := 0 ) R) RD order by RD.ROWNUM) SC
	where SC.ROWNUM>0
	order by SC.ROWNUM
	limit #{param3}, #{param4}
	</select>
	
	<!-- 마이 스튜디오 사진 주인 리스트 -->
	<select id="studioOwnerList" resultType="kr.or.picsion.user.dto.User">
	select u.userName
	from (select * from PICTURE where userNo=#{param1}) p join USERS u on p.userNo=u.userNo
	limit #{param2}, #{param3};
	</select>
	
	<!-- 워드 차트 태그 리스트 -->
	<select id="wordChartList" resultType="String">
	select t.tagContent from PICTURE p join TAG t on p.picNo=t.picNo;
	</select>
	
	<!-- 사진 태그 검색 헤더 -->
	<select id="searchTag" parameterType="String" resultType="String">
	 select DISTINCT t.tagContent from PICTURE p join TAG t on p.picNo=t.picNo where tagContent like '${value}%';	
	</select>
	
	<!-- 사진 태그 검색 페이지 -->
	<select id="searchTagPicList" resultType="kr.or.picsion.picture.dto.Picture">
	select  DISTINCT p.*, if(ifNULL(r.userNo,0)=0,'F','T') as respectCheck, if(ifNULL(b.userNo,0)=0,'F','T') as bookmarkCheck, ifNULL(rc.respectcount,0) as respectCount, ifNULL(bc.bookmarkcount,0) as bookmarkCount from PICTURE p 
	left join (select * from RESPECT where userNo=#{param1}) r on p.picNo=r.picNo 
	left join (select * from BOOKMARK where userNo=#{param1}) b on p.picNo=b.picNo 
	left join (SELECT picNo, COUNT(*) as respectCount FROM RESPECT GROUP BY picNo) rc on rc.picNo=p.picNo 
	left join (SELECT picNo, COUNT(*) as bookmarkCount FROM BOOKMARK GROUP BY picNo) bc on bc.picNo=p.picNo
	left join (select * from TAG where tagContent like '${param2}%') t on p.picNo=t.picNo
	where p.picNo = t.picNo;
	</select>
	
	<!-- 사진 태그 검색 페이지 주인 리스트 -->
	<select id="searchTagUserList" parameterType="String" resultType="kr.or.picsion.user.dto.User">
	select DISTINCT p.picNo as picNo, u.userNo as userNo, u.userName as userName from PICTURE p
	left join USERS u on p.userNo=u.userNo
	left join (select * from TAG where tagContent like '${value}%') t on p.picNo=t.picNo
	where p.picNo = t.picNo;
	</select>
	
	
	<!-- 사진 정보 -->
	<select id ="selectPicture" resultType="kr.or.picsion.picture.dto.Picture">
	select * from PICTURE where picNo = #{picNo}
	</select>
	
	
	<!-- 사진 좋아요 생성 -->
	<insert id="respectIncrease" parameterType="int">
	INSERT INTO RESPECT
		(picNo, userNo)
	VALUES
		( #{param1}, #{param2})
	</insert>
	
	<!-- 사진 좋아요 삭제 -->
	<delete id="respectDelete">
		DELETE FROM RESPECT WHERE picNo=#{param1} AND userNo=#{param2}
	</delete>
	
	<!-- 사진 좋아요 확인 -->
	<select id="respectConfirm" resultType="Integer">
		SELECT COUNT(*) FROM RESPECT WHERE picNo=#{param1} AND userNo=#{param2}
	</select>
	
	<!-- 사진 좋아요 갯수 확인 -->
	<select id="respectCount" resultType="Integer">
		SELECT COUNT(*) FROM RESPECT WHERE picNo=#{picNo}
	</select>
	
	<!-- 사진 북마크 생성 -->
	<insert id="bookmarkIncrease">
	INSERT INTO BOOKMARK
		(picNo, userNo)
	VALUES
		( #{param1}, #{param2})
	</insert>
	
	<!-- 사진 북마크 삭제 -->
	<delete id="bookmarkDelete">
		DELETE FROM BOOKMARK WHERE picNo=#{param1} AND userNo=#{param2}
	</delete>
	
	<!-- 사진 북마크 확인 -->
	<select id="bookmarkConfirm" resultType="Integer">
		SELECT COUNT(*) FROM BOOKMARK WHERE picNo=#{param1} AND userNo=#{param2}
	</select>
	
	<!-- 사진 북마크 갯수 확인 -->
	<select id="bookmarkCount" resultType="Integer">
		SELECT COUNT(*) FROM BOOKMARK WHERE picNo=#{picNo}
	</select>
	
	<!-- 사진 업로드 저장 -->
	<insert id="insertPicture" parameterType="kr.or.picsion.picture.dto.Picture">		
	insert into PICTURE
	 (picNo, picTitle, picContent, picPath, picWater, picPrice, userNo)
	values (#{picNo},#{picTitle},#{picContent},#{picPath},#{picWater},100,#{userNo})
	 <selectKey keyProperty="picNo" resultType="Integer" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey> 
	</insert>
	
	<!-- 사진 워터마크 저장 -->
	<update id="updateWater">
	update PICTURE
	set picWater=#{param1}
	where picNo=#{param2}
	</update>
	<!-- s3에 사진 저장 -->
	<update id="updatePicture">
	update PICTURE
	set picPath=#{param1}
	where picNo=#{param2}
	</update>
	<!-- 사진 업로드 저장 시 태그 저장 -->
	<insert id="insertTag" >
    insert into TAG
    values (#{param1},#{[param2]})
    </insert>
    
    <!-- 태그 정보 -->
    <select id="selectTag" resultType="String">
    	SELECT tagContent FROM TAG WHERE picNo=#{picNo}
    </select>
	
	<!-- 작가의 인기순(좋아요) 사진 리스트 -->
	<select id="photograherRespectPicList" resultType="kr.or.picsion.picture.dto.Picture">
	select p.*,ifnull(r.c,0) as respectCount from PICTURE p 
	left join (select picNo, count(*) as c from RESPECT GROUP by picNo) r on p.picNo=r.picNo 
	where p.userNo=#{userNo} order by r.c desc, p.picReg asc;
	</select>
	
</mapper>